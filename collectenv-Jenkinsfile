
def runstuff(String agentName) {
    node("${agentName}") {
        stage("runstuff on ${agentName}") {
            echo "'runstuff'running on agent, ${agentName}"
            sh 'uname -a'
	    sh 'printenv'
        }
    }
}

def runstuff2(String agentName) {
    node("${agentName}") {
        stage("runstuff2 on ${agentName}") {
            echo "'runstuff2' running on agent, ${agentName}"
            sh 'uname -a'
	    sh 'printenv'
        }
    }
}


pipeline {
    agent {
        label "built-in"
    }
        
    options {
        timestamps()
    }
        
    stages {
        stage('Do things') {
            
            steps {
                script {
		    envname='ZZTESTENV'
		    withEnv(["${envname}='grot'"]) {
			sh 'env|sort'
		    }
		    echo '----------------------------------'
		    rh_env = collectenv('rh', this.&runstuff2)
		    deb_env = collectenv('deb', this.&runstuff)

		    //                    parallel rh_env + deb_env

		    try {
			timeout(time:5, unit:'SECONDS') {
			    sh "sleep 10"
			}
		    } catch (exp) {
			def user = err.getCauses()[0].getUser()
			println("Caught "+exp)
			println("user: "+user);
			println("causes: "+err.getCauses());
			println("causes[0]: "+err.getCauses()[0]);
///			if('SYSTEM' == user.toString()) { // SYSTEM means timeout.
		    }

		    mail to: "ccaulfie@redhat.com",
			replyTo: 'chrissie@wizmail.org',
			subject: 'this is a test of email',
			body: 'lies a moulding in the grave'
                }
            }
        }
    }
}
